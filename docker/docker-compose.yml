version: '2'

services:
  # jupyter notebook
  # jupyter:
  #   image: jupyter/all-spark-notebook
  #   environment:
  #     - JUPYTER_TOKEN=1234 # localhost:8888?token=1234 로 접근가능
  #   ports:
  #     - '8888:8888'
  #   volumes:
  #     - ../workspace:/home/jovyan/work
  #     - D:\dmc_data:/home/data
  #     - ./airflow/dags:/home/jovyan/work # airflow workspace(dag)

  # spark
  spark:
    user: root
    # image: docker.io/bitnami/spark:3 
    build: ./spark/ # dockerfile 다운받아서 필요사항 추가    
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '38080:8080' # web ui port 
      - '38081:18080' # history server port (start-history-server.sh 실행)
    volumes:
      - ../workspace:/home/workspace
      - D:\dmc_data:/home/data
      - ./spark/spark-events:/tmp/spark-events # history event데이터
      # - ./spark/custom:/home/custom
    # command: service ssh start # docker에서 설치한 ssh 실행
    
  spark-worker-1:
    # image: docker.io/bitnami/spark:3
    build: ./spark/ # dockerfile 다운받아서 필요사항 추가
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark
  spark-worker-2:
    # image: docker.io/bitnami/spark:3
    build: ./spark/ # dockerfile 다운받아서 필요사항 추가
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark
  
  # airflow
  postgresql:
    image: 'bitnami/postgresql:11'
    environment:
      - POSTGRESQL_DATABASE=bitnami_airflow
      - POSTGRESQL_USERNAME=bn_airflow
      - POSTGRESQL_PASSWORD=bitnami1
    volumes:
      - ./airflow/airflow-persistence:/bitnami/postgresql
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./airflow/airflow-persistence:/bitnami
  airflow:
    user: root
    # image: bitnami/airflow:latest
    build: ./airflow/
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_PASSWORD=bitnami123
      - AIRFLOW_USERNAME=user
      - AIRFLOW_EMAIL=user@example.com
    ports:
      - '38082:8080'
    volumes:
      - ./airflow/airflow-persistence:/bitnami
      - ./airflow/dags:/opt/bitnami/airflow/dags # dag 위치      
    depends_on:
      - postgresql
  airflow-worker:
    image: bitnami/airflow-worker:latest
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_LOAD_EXAMPLES=yes
      - AIRFLOW_WEBSERVER_HOST=airflow # 추가 (port "inuse" 이슈)
    volumes:
      - ./airflow/airflow-persistence:/bitnami
      - ./airflow/dags:/opt/bitnami/airflow/dags # dag 위치
    depends_on:
      - airflow
  airflow-scheduler:
    image: bitnami/airflow-scheduler:latest
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_LOAD_EXAMPLES=yes
      - AIRFLOW_WEBSERVER_HOST=airflow # 추가 (port "inuse" 이슈)
    volumes:
      - ./airflow/airflow-persistence:/bitnami
      - ./airflow/dags:/opt/bitnami/airflow/dags # dag 위치
    depends_on:
      - airflow  
